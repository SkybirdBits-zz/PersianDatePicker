apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdk 31

    defaultConfig {
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName PUBLISH_VERSION

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions{
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"
}

afterEvaluate{
    publishing {
        publications{
            release(MavenPublication) {
                groupId = PUBLISH_GROUP_ID
                artifactId = PUBLISH_ARTIFACT_ID
                version = PUBLISH_VERSION
                artifact("$buildDir/outputs/aar/lib-release.aar")

            }
        }

        repositories{

            maven{
                name ="persiandatepicker"
                url = uri("https://maven.pkg.github.com/SkybirdBits/PersianDatePicker")

                credentials{
                    def properties = new Properties()
                    properties.load(new FileInputStream(rootProject.file("local.properties")))
                    username(properties.getProperty("gpr.usr"))
                    password(properties.getProperty("gpr.token"))
                }
            }

        }
    }
}
